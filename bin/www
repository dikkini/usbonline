#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app')
    , debug = require('debug')('winusbonline:server')
    , http = require('http')
    , config = require('../libs/config');

/**
 * Get port from environment and store in Express.
 */

var port = config.get('port');
app.set('port', port);

/**
 * Create HTTP server
 */

var server = http.createServer(app);

/**
 * socket.io
 */

var io = require('socket.io').listen(server);
require('../public/assets/sockets/base')(io);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
